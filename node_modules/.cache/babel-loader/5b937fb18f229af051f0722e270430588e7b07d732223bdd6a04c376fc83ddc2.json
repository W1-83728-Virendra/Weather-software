{"ast":null,"code":"var _jsxFileName = \"/home/virendra/weather-app/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"c37e8f114500b7bc29e9ef219c43cbab\"; // Replace with your OpenWeather API key\nconst API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\nfunction Weather() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const fetchWeather = async () => {\n    if (!city) {\n      setError(\"Please enter a city name.\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.get(`${API_URL}`, {\n        params: {\n          q: city,\n          appid: API_KEY,\n          units: \"metric\"\n        }\n      });\n      setWeather(response.data);\n    } catch (err) {\n      setError(\"City not found. Please try again.\");\n      setWeather(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter city name\",\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Condition: \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n        alt: weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Weather, \"u4BODttVY59hNQPAxPndPggSVSs=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_KEY","API_URL","Weather","_s","city","setCity","weather","setWeather","loading","setLoading","error","setError","fetchWeather","response","get","params","q","appid","units","data","err","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","main","temp","description","src","icon","alt","_c","$RefreshReg$"],"sources":["/home/virendra/weather-app/src/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst API_KEY = \"c37e8f114500b7bc29e9ef219c43cbab\"; // Replace with your OpenWeather API key\nconst API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n\nfunction Weather() {\n    const [city, setCity] = useState(\"\");\n    const [weather, setWeather] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const fetchWeather = async () => {\n        if (!city) {\n            setError(\"Please enter a city name.\");\n            return;\n        }\n\n        setLoading(true);\n        setError(\"\");\n\n        try {\n            const response = await axios.get(`${API_URL}`, {\n                params: {\n                    q: city,\n                    appid: API_KEY,\n                    units: \"metric\",\n                },\n            });\n            setWeather(response.data);\n        } catch (err) {\n            setError(\"City not found. Please try again.\");\n            setWeather(null);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"weather-container\">\n            <input\n                type=\"text\"\n                placeholder=\"Enter city name\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n            />\n            <button onClick={fetchWeather}>Get Weather</button>\n\n            {loading && <p>Loading...</p>}\n            {error && <p className=\"error\">{error}</p>}\n\n            {weather && (\n                <div className=\"weather-info\">\n                    <h2>{weather.name}</h2>\n                    <p>Temperature: {weather.main.temp}Â°C</p>\n                    <p>Condition: {weather.weather[0].description}</p>\n                    <img\n                        src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                        alt={weather.weather[0].description}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}